# Supabase on DigitalOcean App Platform - Environment Variables
#
# This file documents all environment variables needed for deployment.
# DO NOT commit secrets to git. Use DigitalOcean App Platform's secure
# environment variable management instead.

# ============================================================
# REQUIRED: JWT Configuration
# ============================================================
# Generate these before deployment using ./generate-keys.sh

# JWT Secret - Used to sign/verify all JWT tokens (min 32 characters)
# Generate with: openssl rand -base64 32
SUPABASE_JWT_SECRET=your-super-secret-jwt-token-with-at-least-32-characters-min

# Anonymous API Key - For unauthenticated requests (respects Row Level Security)
# Generate at https://supabase.com/docs/guides/self-hosting/docker#generate-api-keys
# or use jwt.io with payload: {"role":"anon","iss":"supabase","iat":1609459200,"exp":9999999999}
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByb2plY3QtcmVmIiwicm9sZSI6ImFub24iLCJpYXQiOjE2MDk0NTkyMDAsImV4cCI6OTk5OTk5OTk5OX0.your-signature-here

# Service Role Key - For elevated access (bypasses Row Level Security)
# Generate with payload: {"role":"service_role","iss":"supabase","iat":1609459200,"exp":9999999999}
# NEVER expose this key to clients!
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByb2plY3QtcmVmIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTYwOTQ1OTIwMCwiZXhwIjo5OTk5OTk5OTk5fQ.your-signature-here

# ============================================================
# REQUIRED: DigitalOcean Spaces (Object Storage)
# ============================================================
# Create Spaces bucket: doctl spaces create supabase-storage --region nyc3
# Generate keys: doctl spaces access create

# Spaces bucket name (must be unique globally)
SPACES_BUCKET=supabase-storage-your-unique-name

# Spaces region (must match your app region for best performance)
# Options: nyc3, sfo3, ams3, sgp1, fra1
SPACES_REGION=nyc3

# Spaces Access Key ID
SPACES_ACCESS_KEY=DO00XXXXXXXXXXXXX

# Spaces Secret Access Key
SPACES_SECRET_KEY=your-spaces-secret-access-key-here

# ============================================================
# OPTIONAL: SMTP Configuration (for email authentication)
# ============================================================
# Leave empty to skip email-based authentication features.
# Users can still authenticate with OAuth providers.

# SMTP server hostname (e.g., smtp.sendgrid.net, smtp.gmail.com)
SMTP_HOST=

# SMTP port (typically 587 for TLS, 465 for SSL)
SMTP_PORT=587

# SMTP username
SMTP_USER=

# SMTP password or API key
SMTP_PASS=

# Email address to send from
SMTP_ADMIN_EMAIL=noreply@yourdomain.com

# ============================================================
# AUTO-PROVIDED: App Platform Variables
# ============================================================
# These are automatically provided by App Platform, no need to set:
# - ${APP_URL} - Your app's public URL
# - ${db.DATABASE_URL} - Full PostgreSQL connection string
# - ${db.HOSTNAME} - Database host
# - ${db.PORT} - Database port
# - ${db.DATABASE} - Database name
# - ${db.USERNAME} - Database user
# - ${db.PASSWORD} - Database password

# ============================================================
# Environment Variable Summary for App Platform
# ============================================================
# When deploying via App Platform UI or doctl, set these:
#
# 1. SUPABASE_JWT_SECRET (secret)
# 2. SUPABASE_ANON_KEY (secret)
# 3. SUPABASE_SERVICE_ROLE_KEY (secret)
# 4. SPACES_BUCKET
# 5. SPACES_REGION
# 6. SPACES_ACCESS_KEY (secret)
# 7. SPACES_SECRET_KEY (secret)
# 8. SMTP_HOST (optional)
# 9. SMTP_PORT (optional)
# 10. SMTP_USER (optional)
# 11. SMTP_PASS (optional, secret)
# 12. SMTP_ADMIN_EMAIL (optional)

# ============================================================
# Quick Start Commands
# ============================================================

# 1. Generate JWT keys
# ./generate-keys.sh

# 2. Create Spaces bucket
# doctl spaces create supabase-storage-$(whoami) --region nyc3

# 3. Generate Spaces credentials
# doctl spaces access create

# 4. Get free SMTP (optional)
# - SendGrid: https://sendgrid.com (100 emails/day free)
# - Brevo (formerly Sendinblue): https://brevo.com (300 emails/day free)
# - Mailgun: https://mailgun.com (5,000 emails/month free)
# - Amazon SES: https://aws.amazon.com/ses/ (62,000 emails/month free)

# ============================================================
# Security Best Practices
# ============================================================

# 1. JWT_SECRET should be:
#    - At least 32 characters long
#    - Randomly generated (use openssl rand -base64 32)
#    - Never committed to version control
#    - Rotated periodically (requires regenerating API keys)

# 2. SERVICE_ROLE_KEY should:
#    - NEVER be exposed to client applications
#    - Only be used in backend services
#    - Be stored securely (use App Platform secrets)
#    - Have restricted access (only trusted team members)

# 3. Spaces credentials:
#    - Create dedicated keys per environment (dev/staging/prod)
#    - Rotate keys every 90 days
#    - Monitor access logs for suspicious activity

# 4. SMTP credentials:
#    - Use application-specific passwords when available
#    - Enable 2FA on email service provider
#    - Monitor sending quotas and bounces

# ============================================================
# Production Considerations
# ============================================================

# For production deployments, consider:
# 1. Upgrading to Managed PostgreSQL (production tier) instead of dev database
# 2. Enabling database connection pooling
# 3. Setting up monitoring and alerting
# 4. Configuring custom domain with SSL
# 5. Implementing rate limiting
# 6. Setting up log forwarding (Datadog, Logtail, etc.)
# 7. Creating database backups schedule
# 8. Documenting disaster recovery procedures

# See .do/examples/production.yaml for production configuration example
